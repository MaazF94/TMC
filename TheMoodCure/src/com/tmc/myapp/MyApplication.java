package com.tmc.myapp;

import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Button;
import com.codename1.ui.Dialog;
import com.codename1.ui.plaf.Border;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.ui.Toolbar;
import com.codename1.ui.events.ActionEvent;
import com.codename1.ui.events.ActionListener;
import com.codename1.ui.layouts.GridLayout;
import com.codename1.ui.layouts.Layout;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename
 * One</a> for the purpose of building native mobile applications using Java.
 */
public class MyApplication {
	private Form current;
	private Resources theme;
	private Button sadBtn, happyBtn, angryBtn, confusedBtn, flusteredBtn, scaredBtn;
	private Layout layout;
	public static Form mainForm;
	private static boolean wasHappyClicked, wasSadClicked, wasAngryClicked, wasFlusteredClicked, wasScaredClicked,
			wasConfusedClicked = false;

	public void init(Object context) {
		theme = UIManager.initFirstTheme("/theme");
		// Enable Toolbar on all Forms by default
		Toolbar.setGlobalToolbar(true);
	}

	public void start() {
		if (current != null) {
			current.show();
			return;
		}
		Dialog.show("Tell Us How You Feel", null, "OK", null);
		mainForm = new Form();
		layout = new GridLayout(3, 2);
		mainForm.setLayout(layout);
		// initialize buttons
		happyBtn = new Button("Happy");
		sadBtn = new Button("Sad");
		confusedBtn = new Button("Confused");
		angryBtn = new Button("Angry");
		scaredBtn = new Button("Scared");
		flusteredBtn = new Button("Flustered");

		// add buttons to component
		mainForm.addComponent(happyBtn);
		mainForm.addComponent(sadBtn);
		mainForm.addComponent(confusedBtn);
		mainForm.addComponent(angryBtn);
		mainForm.addComponent(flusteredBtn);
		mainForm.addComponent(scaredBtn);

		// set Colors of buttons
		confusedBtn.getAllStyles().setBorder(Border.createEmpty());
		confusedBtn.getAllStyles().setBgColor(0X333333);
		confusedBtn.getAllStyles().setBgTransparency(100);
		happyBtn.getAllStyles().setBorder(Border.createEmpty());
		happyBtn.getAllStyles().setBgColor(0X4EF226);
		happyBtn.getAllStyles().setBgTransparency(100);
		angryBtn.getAllStyles().setBorder(Border.createEmpty());
		angryBtn.getAllStyles().setBgColor(0Xff00000);
		angryBtn.getAllStyles().setBgTransparency(150);
		sadBtn.getAllStyles().setBorder(Border.createEmpty());
		sadBtn.getAllStyles().setBgColor(0X337879);
		sadBtn.getAllStyles().setBgTransparency(100);
		flusteredBtn.getAllStyles().setBorder(Border.createEmpty());
		flusteredBtn.getAllStyles().setBgColor(0XFA8806);
		flusteredBtn.getAllStyles().setBgTransparency(100);
		scaredBtn.getAllStyles().setBorder(Border.createEmpty());
		scaredBtn.getAllStyles().setBgColor(0X33);
		scaredBtn.getAllStyles().setBgTransparency(150);

		// action listeners for buttons
		happyBtn.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent evt) {
				wasHappyClicked = true;
				new ShowQuotes().show();
			}
		});
		scaredBtn.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent evt) {
				wasScaredClicked = true;
				new ShowQuotes().show();
			}
		});
		flusteredBtn.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent evt) {
				wasFlusteredClicked = true;
				new ShowQuotes().show();
			}
		});
		angryBtn.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent evt) {
				wasAngryClicked = true;
				new ShowQuotes().show();
			}
		});
		confusedBtn.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent evt) {
				wasConfusedClicked = true;
				new ShowQuotes().show();
			}
		});
		sadBtn.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent evt) {
				wasSadClicked = true;
				new ShowQuotes().show();
			}
		});
		mainForm.show();
	}

	public void stop() {
		current = Display.getInstance().getCurrent();
		if (current instanceof Dialog) {
			((Dialog) current).dispose();
			current = Display.getInstance().getCurrent();
		}
	}

	public void destroy() {
	}

	// Getters and setters
	public boolean wasHappyClicked() {
		return wasHappyClicked;
	}

	public void setWasHappyClicked(boolean wasHappyClicked) {
		MyApplication.wasHappyClicked = wasHappyClicked;
	}

	public boolean wasAngryClicked() {
		return wasAngryClicked;
	}

	public void setWasAngryClicked(boolean wasAngryClicked) {
		MyApplication.wasAngryClicked = wasAngryClicked;
	}

	public boolean wasSadClicked() {
		return wasSadClicked;
	}

	public void setWasSadClicked(boolean wasSadClicked) {
		MyApplication.wasSadClicked = wasSadClicked;
	}

	public boolean wasConfusedClicked() {
		return wasConfusedClicked;
	}

	public void setWasConfusedClicked(boolean wasConfusedClicked) {
		MyApplication.wasConfusedClicked = wasConfusedClicked;
	}

	public boolean wasScaredClicked() {
		return wasScaredClicked;
	}

	public void setWasScaredClicked(boolean wasScaredClicked) {
		MyApplication.wasScaredClicked = wasScaredClicked;
	}

	public boolean wasFlusteredClicked() {
		return wasFlusteredClicked;
	}

	public void setWasFlusteredClicked(boolean wasFlusteredClicked) {
		MyApplication.wasFlusteredClicked = wasFlusteredClicked;
	}
}
